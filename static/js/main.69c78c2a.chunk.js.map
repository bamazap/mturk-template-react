{"version":3,"sources":["App.tsx","Instructions/Instructions.tsx","Task/Task.tsx","DemographicSurvey/FormComponents.tsx","DemographicSurvey/DemographicSurvey.tsx","Done/Done.tsx","index.tsx","App.module.scss","Instructions/Instructions.module.scss","DemographicSurvey/DemographicSurvey.module.scss"],"names":["pages","description","config","meta","instructions","simple","steps","images","Instructions","_ref","onContinue","react_default","a","createElement","className","styles","dangerouslySetInnerHTML","__html","length","map","step","key","url","src","onClick","Task","handleDone","_this","props","onDone","timestamp","Date","render","task","Component","Group","inputType","onChange","event","target","value","entries","Object","options","addOther","push","undefined","_ref2","slicedToArray","display","type","name","defaultChecked","isChecked","_","RadioGroup","_Group","_getPrototypeOf3","_this2","classCallCheck","this","_len2","arguments","args","Array","_key2","possibleConstructorReturn","getPrototypeOf","call","apply","concat","inherits","CheckboxGroup","_Group2","_getPrototypeOf4","_this3","_len4","_key4","indexOf","ages","ageGroup18","ageGroup25","ageGroup35","ageGroup45","ageGroup55","ageGroup65","educations","lessThanHighSchool","highSchool","someCollege","twoYearDegree","fourYearDegree","mastersDegree","doctoralDegree","professionalDegree","ethnicities","Asian","Latino_Hispanic","Pacific_Islander","Black_African","Middle_Eastern","White_Caucasian","East_Indian","Native_American","initialState","gender","age","education","ethnicity","feedback","DemographicSurvey","state","handleInput","setState","defineProperty","handleCheck","prevState","prevCheckedValues","valueIdx","splice","handleSubmit","preventDefault","onSubmit","alert","survey","FormComponents_RadioGroup","male","female","FormComponents_CheckboxGroup","rows","placeholder","e","Done","App","page","submit","form","FormData","urlParams","URLSearchParams","window","location","search","set","get","JSON","stringify","taskData","surveyData","submitDomain","submitURL","axios","post","headers","Content-Type","mainContent","src_Instructions_Instructions","Task_Task","DemographicSurvey_DemographicSurvey","done","app","ReactDOM","App_App","document","getElementById","module","exports"],"mappings":"iIAQKA,2ICJGC,EAAgBC,EAAOC,KAAvBF,cAKJC,EAAOE,aAHDA,IAARC,OACAC,UACAC,WAkCaC,EA3BgC,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,WAAH,OAC7CC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOX,cACrBO,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAASb,GACtBU,EAAAC,EAAAC,cAAA,KAAGG,wBAAyB,CAACC,OAAQb,KAClCE,GAASA,EAAMY,OAAS,GAAOP,EAAAC,EAAAC,cAAA,WAChCF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,UACGP,EAAMa,IAAI,SAAAC,GAAI,OACbT,EAAAC,EAAAC,cAAA,MAAIG,wBAAyB,CAACC,OAAQG,GAAQC,IAAKD,QAIxDb,EAAOW,OAAS,GAAMP,EAAAC,EAAAC,cAAA,WACrBF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,WACGN,EAAOY,IAAI,SAAAG,GAAG,OACbX,EAAAC,EAAAC,cAAA,OAAKU,IAAKD,EAAKD,IAAKC,QAIzBZ,GACCC,EAAAC,EAAAC,cAAA,UAAQW,QAASd,GAAjB,+BC1Bee,6MAEnBC,WAAa,WACPC,EAAKC,MAAMC,QACbF,EAAKC,MAAMC,OAAO,CAAEC,UAAW,IAAIC,UAIvCC,OAAS,kBACPrB,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOkB,MACrBtB,EAAAC,EAAAC,cAAA,UAAQW,QAASG,EAAKD,YAAtB,2DAV4BQ,qCCOnBC,6MACJC,mBAITC,SAAW,SAACC,GACVX,EAAKC,MAAMS,SAASC,EAAMC,OAAOC,UAGnCR,OAAS,WACP,IAAMS,EAAUC,OAAOD,QAAQd,EAAKC,MAAMe,SAK1C,OAJIhB,EAAKC,MAAMgB,UACbH,EAAQI,KAAK,CAAC,aAASC,IAEzBL,EAAQI,KAAK,CAAC,cAAe,sBAE3BlC,EAAAC,EAAAC,cAAA,OAAKwB,SAAUV,EAAKU,UACnBI,EAAQtB,IAAI,SAAAV,GAAA,IAAAsC,EAAAL,OAAAM,EAAA,EAAAN,CAAAjC,EAAA,GAAE+B,EAAFO,EAAA,GAASE,EAATF,EAAA,UACXpC,EAAAC,EAAAC,cAAA,SAAOQ,IAAKmB,GACV7B,EAAAC,EAAAC,cAAA,SACEqC,KAAMvB,EAAKS,UACXe,KAAMA,KACNX,MAAOA,EACPY,eAAgBzB,EAAK0B,UAAUb,KAEjC7B,EAAAC,EAAAC,cAAA,YAAOyC,WAAWL,GAAWA,EAAUK,YAAYd,sCAzBVN,aAuCtCqB,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAhB,OAAAiB,EAAA,EAAAjB,CAAAkB,KAAAL,GAAA,QAAAM,EAAAC,UAAA5C,OAAA6C,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAAH,UAAAG,GAAA,OAAAP,EAAAhB,OAAAwB,EAAA,EAAAxB,CAAAkB,MAAAH,EAAAf,OAAAyB,EAAA,EAAAzB,CAAAa,IAAAa,KAAAC,MAAAZ,EAAA,CAAAG,MAAAU,OAAAP,MACE3B,UAAY,QADdsB,EAGEL,UAAY,SAACb,GAAD,OAAmBkB,EAAK9B,MAAMY,QAAUA,GAHtDkB,EAAA,OAAAhB,OAAA6B,EAAA,EAAA7B,CAAAa,EAAAC,GAAAD,EAAA,CAAgCpB,GAYnBqC,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAjC,OAAAiB,EAAA,EAAAjB,CAAAkB,KAAAY,GAAA,QAAAI,EAAAd,UAAA5C,OAAA6C,EAAA,IAAAC,MAAAY,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAAd,EAAAc,GAAAf,UAAAe,GAAA,OAAAF,EAAAjC,OAAAwB,EAAA,EAAAxB,CAAAkB,MAAAc,EAAAhC,OAAAyB,EAAA,EAAAzB,CAAA8B,IAAAJ,KAAAC,MAAAK,EAAA,CAAAd,MAAAU,OAAAP,MACE3B,UAAY,WADduC,EAGEtB,UAAY,SAACb,GAAD,OAAmBmC,EAAK/C,MAAMY,MAAMsC,QAAQtC,IAAU,GAHpEmC,EAAA,OAAAjC,OAAA6B,EAAA,EAAA7B,CAAA8B,EAAAC,GAAAD,EAAA,CAAmCrC,oBC/D7B4C,EAAO,CACXC,WAAY,WACZC,WAAY,WACZC,WAAY,WACZC,WAAY,WACZC,WAAY,WACZC,WAAY,eAGRC,EAAa,CACjBC,wBAAoBzC,EACpB0C,WAAY,oBACZC,iBAAa3C,EACb4C,mBAAe5C,EACf6C,oBAAgB7C,EAChB8C,cAAe,kBACfC,oBAAgB/C,EAChBgD,wBAAoBhD,GAGhBiD,EAAc,CAClBC,WAAOlD,EACPmD,gBAAiB,oBACjBC,sBAAkBpD,EAClBqD,cAAe,0BACfC,oBAAgBtD,EAChBuD,gBAAiB,oBACjBC,iBAAaxD,EACbyD,qBAAiBzD,GAGb0D,EAAe,CACnBC,OAAQ,GACRC,IAAK,GACLC,UAAW,GACXC,UAAW,GACXC,SAAU,IAUSC,6MACVC,MAAeP,IAExBQ,YAAc,SAAwB7D,GAAxB,OAAoC,SAACX,GACjDb,EAAKsF,SAALvE,OAAAwE,EAAA,EAAAxE,CAAA,GACGS,EAAOX,QAIZ2E,YAAc,SAAwBhE,GAAxB,OAAoC,SAACX,GACjDb,EAAKsF,SAAS,SAACG,GACb,IAAMC,EAAoBD,EAAUjE,GAC9BmE,EAAWD,EAAkBvC,QAAQtC,GAM3C,OALI8E,GAAY,EACdD,EAAkBE,OAAOD,EAAU,GAEnCD,EAAkBxE,KAAKL,GAElBE,OAAAwE,EAAA,EAAAxE,CAAA,GAAGS,EAAOkE,SAIrBG,aAAe,SAAClF,GACdA,EAAMmF,iBAEH9F,EAAKoF,MAAMN,QACR9E,EAAKoF,MAAML,KACX/E,EAAKoF,MAAMJ,WACmB,GAA/BhF,EAAKoF,MAAMH,UAAU1F,OAGfS,EAAKC,MAAM8F,UACpB/F,EAAKC,MAAM8F,SAAS/F,EAAKoF,OAFzBY,MAAM,kCAMV3F,OAAS,kBACPrB,EAAAC,EAAAC,cAAA,QAAMC,UAAWC,IAAO6G,OAAQF,SAAU/F,EAAK6F,cAC7C7G,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAA,sFAEAF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAACgH,EAAD,CACE1E,KAAK,SACLR,QAAS,CAAEmF,UAAMhF,EAAWiF,YAAQjF,GACpCF,UAAU,EACVJ,MAAOb,EAAKoF,MAAMN,OAClBpE,SAAUV,EAAKqF,YAAY,YAG7BrG,EAAAC,EAAAC,cAAA,iBACAF,EAAAC,EAAAC,cAACgH,EAAD,CACE1E,KAAK,MACLR,QAASoC,EACTvC,MAAOb,EAAKoF,MAAML,IAClBrE,SAAUV,EAAKqF,YAAY,SAG7BrG,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAACgH,EAAD,CACE1E,KAAK,YACLR,QAAS2C,EACT9C,MAAOb,EAAKoF,MAAMJ,UAClBtE,SAAUV,EAAKqF,YAAY,eAG7BrG,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAACmH,EAAD,CACE7E,KAAK,YACLR,QAASoD,EACTnD,UAAU,EACVJ,MAAOb,EAAKoF,MAAMH,UAClBvE,SAAUV,EAAKwF,YAAY,eAG7BxG,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,YACEsC,KAAK,WACL8E,KAAM,EACNC,YAAY,iFACZ7F,SAAU,SAAC8F,GAAD,OAAOxG,EAAKqF,YAAY,WAAjBrF,CAA6BwG,EAAE5F,OAAOC,QACvDA,MAAOb,EAAKoF,MAAMF,WAGpBlG,EAAAC,EAAAC,cAAA,UAAQqC,KAAK,UAAb,yCApFyChB,aClDhC,SAASkG,IACtB,OACEzH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,6CLEDb,mHAagBqI,6MACVtB,MAAyB,CAChCuB,KAAMtI,EAAMI,gBAGdmI,OAAS,WACP,IAAMC,EAAO,IAAIC,SACXC,EAAY,IAAIC,gBAAgBC,OAAOC,SAASC,QAGtDN,EAAKO,IAAI,eAAgBL,EAAUM,IAAI,iBAAmB,KAE1DR,EAAKO,IAAI,WAAYL,EAAUM,IAAI,aAAe,KAClDR,EAAKO,IAAI,QAASL,EAAUM,IAAI,aAAe,KAE/CR,EAAKO,IAAI,WAAYE,KAAKC,UAAUvH,EAAKoF,MAAMoC,WAC/CX,EAAKO,IAAI,aAAcE,KAAKC,UAAUvH,EAAKoF,MAAMqC,aAGjD,IAAMC,EAAeX,EAAUM,IAAI,iBAAmB,yBAChDM,EAAS,GAAAhF,OAAM+E,EAAN,wBAEfE,IAAMC,KAAKF,EAAWd,EADN,CAAEiB,QAAS,CAACC,eAAgB,kGAIrC,IACHC,EADGjG,EAAAE,KA0BP,OAvBE+F,EADE/F,KAAKmD,MAAMuB,OAAStI,EAAMI,aACdO,EAAAC,EAAAC,cAAC+I,EAAD,CACZlJ,WAAY,kBAAMgD,EAAKuD,SAAS,CAAEqB,KAAMtI,EAAMiC,UAEvC2B,KAAKmD,MAAMuB,OAAStI,EAAMiC,KACrBtB,EAAAC,EAAAC,cAACgJ,EAAD,CACZhI,OAAQ,SAACsH,GAAD,OAAczF,EAAKuD,SAAS,CAClCqB,KAAMtI,EAAM4H,OACZuB,gBAGKvF,KAAKmD,MAAMuB,OAAStI,EAAM4H,OACrBjH,EAAAC,EAAAC,cAACiJ,EAAD,CACZpC,SAAU,SAAC0B,GACT1F,EAAKuD,SAAS,CACZqB,KAAMtI,EAAM+J,KACZX,cACC1F,EAAK6E,WAIE5H,EAAAC,EAAAC,cAACuH,EAAD,MAIdzH,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOiJ,KACrBrJ,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,+BAGFF,EAAAC,EAAAC,cAAA,YACI8I,WA1DqBzH,aMfjC+H,IAASjI,OAAOrB,EAAAC,EAAAC,cAACqJ,EAAD,MAASC,SAASC,eAAe,ksBCLjDC,EAAAC,QAAA,CAAkBN,IAAA,sCCAlBK,EAAAC,QAAA,CAAkBlK,aAAA,6ECAlBiK,EAAAC,QAAA,CAAkB1C,OAAA","file":"static/js/main.69c78c2a.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport styles from './App.module.scss';\nimport Instructions from './Instructions/Instructions';\nimport Task, { TaskData } from './Task/Task';\nimport DemographicSurvey, { SurveyData } from './DemographicSurvey/DemographicSurvey';\nimport Done from './Done/Done';\n\nenum pages {\n  instructions,\n  task,\n  survey,\n  done,\n};\n\ninterface State {\n  page: pages;\n  taskData?: TaskData;\n  surveyData?: SurveyData;\n}\n\nexport default class App extends Component<{}, State> {\n  readonly state: Readonly<State> = {\n    page: pages.instructions\n  };\n\n  submit = () => {\n    const form = new FormData(); // AMT expects Form Data\n    const urlParams = new URLSearchParams(window.location.search);\n\n    // AMT expects this field\n    form.set('assignmentId', urlParams.get('assignmentId') || '?');\n    // AMT ignores these fields so you can remove them if you are sending to AMT\n    form.set('workerId', urlParams.get('workerId') || '?');\n    form.set('hitId', urlParams.get('workerId') || '?');\n\n    form.set('taskData', JSON.stringify(this.state.taskData));\n    form.set('surveyData', JSON.stringify(this.state.surveyData));\n\n    // should get prod/sandbox domain, falling back to prod\n    const submitDomain = urlParams.get('turkSubmitTo') || 'https://www.mturk.com/';\n    const submitURL = `${submitDomain}mturk/externalSubmit`;\n    const options = { headers: {'Content-Type': 'multipart/form-data' }};\n    axios.post(submitURL, form, options);\n  }\n\n  render() {\n    let mainContent: JSX.Element;\n    if (this.state.page === pages.instructions) {\n      mainContent = <Instructions\n        onContinue={() => this.setState({ page: pages.task })}\n      />;\n    } else if (this.state.page === pages.task) {\n      mainContent = <Task\n        onDone={(taskData) => this.setState({\n          page: pages.survey,\n          taskData,\n        })}\n      />;\n    } else if (this.state.page === pages.survey) {\n      mainContent = <DemographicSurvey\n        onSubmit={(surveyData) => {\n          this.setState({\n            page: pages.done,\n            surveyData\n          }, this.submit);\n        }}\n      />\n    } else {\n      mainContent = <Done />;\n    }\n\n    return (\n      <div className={styles.app}>\n        <header>\n          <h1>Experiment Title</h1>\n        </header>\n\n        <main>\n          { mainContent }\n        </main>\n      </div>\n    );\n  }\n}\n","import React, { FunctionComponent } from 'react';\nimport styles from './Instructions.module.scss';\nimport config from '../config.json';\n\nconst { description } = config.meta;\nconst {\n  simple: instructions,\n  steps,\n  images,\n} = config.instructions;\n\ninterface Props {\n  onContinue?: () => void;\n}\n\nconst Instructions: FunctionComponent<Props> = ({ onContinue }) => (\n  <div className={styles.instructions}>\n    <h2>Instructions</h2>\n    <p className='bold'>{ description }</p>\n    <p dangerouslySetInnerHTML={{__html: instructions }}></p>\n    { (steps && steps.length > 0) && (<div>\n      <h3>Guidelines</h3>\n      <ol>\n        {steps.map(step => (\n          <li dangerouslySetInnerHTML={{__html: step }} key={step}></li>\n        ))}\n      </ol>\n    </div>)}\n    {images.length > 0 && (<div>\n      <h3>Examples</h3>\n      <div>\n        {images.map(url => (\n          <img src={url} key={url}></img>\n        ))}\n      </div>\n    </div>)}\n    {onContinue && (\n      <button onClick={onContinue}>Continue</button>\n    )}\n  </div>\n);\n\nexport default Instructions;\n","import React, { Component } from 'react';\nimport styles from './Task.module.scss';\n\ninterface Props {\n  onDone?: (data: TaskData) => void;\n}\n\nexport interface TaskData {\n  timestamp: Date;\n}\n\nexport default class Task extends Component<Props> {\n\n  handleDone = () => {\n    if (this.props.onDone) {\n      this.props.onDone({ timestamp: new Date() });\n    }\n  }\n\n  render = () => (\n    <div className={styles.task}>\n      <button onClick={this.handleDone}>Click the button to win!</button>\n    </div>\n  )\n\n}","import React, { Component } from 'react';\nimport * as _ from 'lodash';\n\n\n// Shared\n\n// name is the name of the radio / checkbox group; should be unique for page\n// options map to display names, just uppercases each word of value if not given\n// onchange passes the value of the input interacted with\ninterface GroupProps {\n  name: string;\n  options: { [value: string]: string | undefined };\n  onChange: (updatedValue: string) => void;\n  addOther?: boolean;\n}\n\n// This component is stateless\n// T is extra props, should be \"extends but doesn't override\"\nabstract class Group<T extends GroupProps> extends Component<T> {\n  abstract inputType: string;\n\n  abstract isChecked(value: string): boolean;\n\n  onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.props.onChange(event.target.value);\n  }\n\n  render = () => {\n    const entries = Object.entries(this.props.options);\n    if (this.props.addOther) {\n      entries.push(['other', undefined]);\n    }\n    entries.push(['unspecified', 'Prefer Not To Say']);\n    return (\n      <div onChange={this.onChange}>\n      {entries.map(([value, display]) => (\n        <label key={value}>\n          <input\n            type={this.inputType}\n            name={name}\n            value={value}\n            defaultChecked={this.isChecked(value)}\n          />\n          <span>{_.isString(display) ? display : _.startCase(value)}</span>\n        </label>\n      ))}\n      </div>\n    )\n  }\n}\n\n\n// Radio Group\ninterface RadioGroupProps extends GroupProps {\n  value: string; // the currently checked radio button\n}\n\nexport class RadioGroup extends Group<RadioGroupProps> {\n  inputType = 'radio';\n\n  isChecked = (value: string) => this.props.value === value;\n}\n\n\n// Checkbox Group\ninterface CheckboxGroupProps extends GroupProps {\n  value: string[]; // all checked values\n}\n\nexport class CheckboxGroup extends Group<CheckboxGroupProps> {\n  inputType = 'checkbox';\n\n  isChecked = (value: string) => this.props.value.indexOf(value) >= 0;\n}\n","\nimport React, { Component } from 'react';\nimport { RadioGroup, CheckboxGroup } from './FormComponents';\n\nimport styles from './DemographicSurvey.module.scss';\n\nconst ages = {\n  ageGroup18: '18 to 24',\n  ageGroup25: '25 to 34',\n  ageGroup35: '35 to 44',\n  ageGroup45: '45 to 54',\n  ageGroup55: '55 to 64',\n  ageGroup65: '65 and over',\n}\n\nconst educations = {\n  lessThanHighSchool: undefined,\n  highSchool: 'High School / GED',\n  someCollege: undefined,\n  twoYearDegree: undefined,\n  fourYearDegree: undefined,\n  mastersDegree: \"Master's Degree\",\n  doctoralDegree: undefined,\n  professionalDegree: undefined\n}\n\nconst ethnicities = {\n  Asian: undefined,\n  Latino_Hispanic: 'Latino / Hispanic',\n  Pacific_Islander: undefined,\n  Black_African: 'Black / African Descent',\n  Middle_Eastern: undefined,\n  White_Caucasian: 'White / Caucasian',\n  East_Indian: undefined,\n  Native_American: undefined\n};\n\nconst initialState = {\n  gender: '',\n  age: '',\n  education: '',\n  ethnicity: [] as string[],\n  feedback: '',\n};\ntype State = Readonly<typeof initialState>;\n\nexport type SurveyData = State;\n\ninterface Props {\n  onSubmit?: (formData: State) => void;\n}\n\nexport default class DemographicSurvey extends Component<Props, State> {\n  readonly state: State = initialState;\n\n  handleInput = <K extends keyof State>(name: K) => (value: string) => {\n    this.setState({\n      [name]: value,\n    } as any);\n  }\n\n  handleCheck = <K extends keyof State>(name: K) => (value: string) => {\n    this.setState((prevState) => {\n      const prevCheckedValues = prevState[name] as string[];\n      const valueIdx = prevCheckedValues.indexOf(value);\n      if (valueIdx >= 0) {\n        prevCheckedValues.splice(valueIdx, 1);\n      } else {\n        prevCheckedValues.push(value);\n      }\n      return { [name]: prevCheckedValues } as any;\n    });\n  }\n\n  handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (\n      !this.state.gender\n      || !this.state.age\n      || !this.state.education\n      || this.state.ethnicity.length == 0\n    ) {\n      alert('Please complete the survey.');\n    } else if (this.props.onSubmit) {\n      this.props.onSubmit(this.state);\n    }\n  }\n\n  render = () => (\n    <form className={styles.survey} onSubmit={this.handleSubmit}>\n      <h2>Demographic Survey</h2>\n      <p>Before you submit the task, please take a moment to fill out this survey.</p>\n\n      <h4>Gender</h4>\n      <RadioGroup\n        name=\"gender\"\n        options={{ male: undefined, female: undefined }}\n        addOther={true}\n        value={this.state.gender}\n        onChange={this.handleInput('gender')}\n      />\n\n      <h4>Age</h4>\n      <RadioGroup\n        name=\"age\"\n        options={ages}\n        value={this.state.age}\n        onChange={this.handleInput('age')}\n      />\n\n      <h4>Education</h4>\n      <RadioGroup\n        name=\"education\"\n        options={educations}\n        value={this.state.education}\n        onChange={this.handleInput('education')}\n      />\n\n      <h4>Ethnicity</h4>\n      <CheckboxGroup\n        name=\"ethnicity\"\n        options={ethnicities}\n        addOther={true}\n        value={this.state.ethnicity}\n        onChange={this.handleCheck('ethnicity')}\n      />\n\n      <h4>Feedback</h4>\n      <textarea\n        name=\"feedback\"\n        rows={2}\n        placeholder=\"If you have any feedback, comments, or suggestions, please describe them here.\"\n        onChange={(e) => this.handleInput('feedback')(e.target.value)}\n        value={this.state.feedback}\n      />\n\n      <button type=\"submit\">\n        Submit\n      </button>\n\n    </form>\n  )\n\n}","import React, { Component } from 'react';\n\nexport default function Done() {\n  return (\n    <div>\n      <h2>Thank You</h2>\n      <p>The task is now over.</p>\n    </div>\n  )\n}","import 'react-app-polyfill/ie9';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__W2tGk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"instructions\":\"Instructions_instructions__2yno8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"survey\":\"DemographicSurvey_survey__3Grmp\"};"],"sourceRoot":""}