{"version":3,"sources":["Instructions/Instructions.tsx","Task/Task.tsx","DemographicSurvey/FormComponents.tsx","DemographicSurvey/DemographicSurvey.tsx","Done/Done.tsx","App.tsx","index.tsx","App.module.scss","Instructions/Instructions.module.scss","DemographicSurvey/DemographicSurvey.module.scss"],"names":["Instructions","_ref","onContinue","react_default","a","createElement","className","styles","instructions","onClick","src","Task","handleDone","_this","props","onDone","timestamp","Date","render","task","Component","Group","inputType","onChange","event","target","value","entries","Object","options","addOther","push","undefined","map","_ref2","slicedToArray","display","key","type","name","checked","isChecked","readOnly","isString","startCase","RadioGroup","_Group","_getPrototypeOf3","_this2","classCallCheck","this","_len2","arguments","length","args","Array","_key2","possibleConstructorReturn","getPrototypeOf","call","apply","concat","inherits","CheckboxGroup","_Group2","_getPrototypeOf4","_this3","_len4","_key4","indexOf","ages","ageGroup18","ageGroup25","ageGroup35","ageGroup45","ageGroup55","ageGroup65","educations","lessThanHighSchool","highSchool","someCollege","twoYearDegree","fourYearDegree","mastersDegree","doctoralDegree","professionalDegree","ethnicities","Asian","Latino_Hispanic","Pacific_Islander","Black_African","Middle_Eastern","White_Caucasian","East_Indian","Native_American","initialState","gender","age","education","ethnicity","feedback","DemographicSurvey","state","handleInput","setState","defineProperty","handleCheck","prevState","prevCheckedValues","valueIdx","splice","handleSubmit","preventDefault","onSubmit","alert","survey","FormComponents_RadioGroup","male","female","FormComponents_CheckboxGroup","rows","placeholder","e","Done","pages","title","document","App","page","submit","urlParams","URLSearchParams","window","location","search","submitDomain","get","endsWith","url","data","form","action","method","setAttribute","forEach","input","JSON","stringify","append","body","getElementsByTagName","item","appendChild","removeChild","formPOST","assignmentId","taskData","surveyData","done","mainContent","src_Instructions_Instructions","Task_Task","DemographicSurvey_DemographicSurvey","app","ReactDOM","App_App","getElementById","module","exports"],"mappings":"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","file":"static/js/main.7d8f2ba4.chunk.js","sourcesContent":["import React, { FunctionComponent } from 'react';\nimport styles from './Instructions.module.scss';\n\ninterface Props {\n  onContinue?: () => void;\n}\n\nconst Instructions: FunctionComponent<Props> = ({ onContinue }) => (\n  <div className={styles.instructions}>\n    <h2>Instructions</h2>\n    <p className='bold'>A one-line description of the task.</p>\n    <p>A paragraph explaining a bit more about the task.</p>\n    <h3>Guidelines</h3>\n    <ol>\n      <li>Read the instructions.</li>\n      <li>Do the task.</li>\n      <li>Profit!</li>\n    </ol>\n    <button onClick={onContinue}>Continue</button>\n    <h3>Examples</h3>\n    <img src='https://i.gifer.com/UGQn.gif'></img>\n  </div>\n);\n\nexport default Instructions;\n","import React, { Component } from 'react';\nimport styles from './Task.module.scss';\n\ninterface Props {\n  onDone?: (data: TaskData) => void;\n}\n\nexport interface TaskData {\n  timestamp: Date;\n}\n\nexport default class Task extends Component<Props> {\n\n  handleDone = () => {\n    if (this.props.onDone) {\n      this.props.onDone({ timestamp: new Date() });\n    }\n  }\n\n  render = () => (\n    <div className={styles.task}>\n      <button onClick={this.handleDone}>Click the button to win!</button>\n    </div>\n  )\n\n}","import React, { Component } from 'react';\nimport { isString, startCase } from 'lodash';\n\n\n// Shared\n\n// name is the name of the radio / checkbox group; should be unique for page\n// options map to display names, just uppercases each word of value if not given\n// onchange passes the value of the input interacted with\ninterface GroupProps {\n  name: string;\n  options: { [value: string]: string | undefined };\n  onChange: (updatedValue: string) => void;\n  addOther?: boolean;\n}\n\n// This component is stateless\n// T is extra props, should be \"extends but doesn't override\"\nabstract class Group<T extends GroupProps> extends Component<T> {\n  abstract inputType: string;\n\n  abstract isChecked(value: string): boolean;\n\n  onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.props.onChange(event.target.value);\n  }\n\n  render = () => {\n    const entries = Object.entries(this.props.options);\n    if (this.props.addOther) {\n      entries.push(['other', undefined]);\n    }\n    entries.push(['unspecified', 'Prefer Not To Say']);\n    return (\n      <div onChange={this.onChange}>\n      {entries.map(([value, display]) => (\n        <label key={value}>\n          <input\n            type={this.inputType}\n            name={name}\n            value={value}\n            checked={this.isChecked(value)}\n            readOnly={true}\n          />\n          <span>{isString(display) ? display : startCase(value)}</span>\n        </label>\n      ))}\n      </div>\n    )\n  }\n}\n\n\n// Radio Group\ninterface RadioGroupProps extends GroupProps {\n  value: string; // the currently checked radio button\n}\n\nexport class RadioGroup extends Group<RadioGroupProps> {\n  inputType = 'radio';\n\n  isChecked = (value: string) => this.props.value === value;\n}\n\n\n// Checkbox Group\ninterface CheckboxGroupProps extends GroupProps {\n  value: string[]; // all checked values\n}\n\nexport class CheckboxGroup extends Group<CheckboxGroupProps> {\n  inputType = 'checkbox';\n\n  isChecked = (value: string) => this.props.value.indexOf(value) >= 0;\n}\n","\nimport React, { Component } from 'react';\nimport { RadioGroup, CheckboxGroup } from './FormComponents';\n\nimport styles from './DemographicSurvey.module.scss';\n\nconst ages = {\n  ageGroup18: '18 to 24',\n  ageGroup25: '25 to 34',\n  ageGroup35: '35 to 44',\n  ageGroup45: '45 to 54',\n  ageGroup55: '55 to 64',\n  ageGroup65: '65 and over',\n}\n\nconst educations = {\n  lessThanHighSchool: undefined,\n  highSchool: 'High School / GED',\n  someCollege: undefined,\n  twoYearDegree: undefined,\n  fourYearDegree: undefined,\n  mastersDegree: \"Master's Degree\",\n  doctoralDegree: undefined,\n  professionalDegree: undefined\n}\n\nconst ethnicities = {\n  Asian: undefined,\n  Latino_Hispanic: 'Latino / Hispanic',\n  Pacific_Islander: undefined,\n  Black_African: 'Black / African Descent',\n  Middle_Eastern: undefined,\n  White_Caucasian: 'White / Caucasian',\n  East_Indian: undefined,\n  Native_American: undefined\n};\n\nconst initialState = {\n  gender: '',\n  age: '',\n  education: '',\n  ethnicity: [] as string[],\n  feedback: '',\n};\ntype State = Readonly<typeof initialState>;\n\nexport type SurveyData = State;\n\ninterface Props {\n  onSubmit?: (formData: State) => void;\n}\n\nexport default class DemographicSurvey extends Component<Props, State> {\n  readonly state: State = initialState;\n\n  handleInput = <K extends keyof State>(name: K) => (value: string) => {\n    this.setState({\n      [name]: value,\n    } as any);\n  }\n\n  handleCheck = <K extends keyof State>(name: K) => (value: string) => {\n    this.setState((prevState) => {\n      const prevCheckedValues = prevState[name] as string[];\n      const valueIdx = prevCheckedValues.indexOf(value);\n      if (valueIdx >= 0) {\n        prevCheckedValues.splice(valueIdx, 1);\n      } else {\n        prevCheckedValues.push(value);\n      }\n      return { [name]: prevCheckedValues } as any;\n    });\n  }\n\n  handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (\n      !this.state.gender\n      || !this.state.age\n      || !this.state.education\n      || this.state.ethnicity.length == 0\n    ) {\n      alert('Please complete the survey.');\n    } else if (this.props.onSubmit) {\n      this.props.onSubmit(this.state);\n    }\n  }\n\n  render = () => (\n    <form className={styles.survey} onSubmit={this.handleSubmit}>\n      <h2>Demographic Survey</h2>\n      <p>Before you submit the task, please take a moment to fill out this survey.</p>\n\n      <h4>Gender</h4>\n      <RadioGroup\n        name=\"gender\"\n        options={{ male: undefined, female: undefined }}\n        addOther={true}\n        value={this.state.gender}\n        onChange={this.handleInput('gender')}\n      />\n\n      <h4>Age</h4>\n      <RadioGroup\n        name=\"age\"\n        options={ages}\n        value={this.state.age}\n        onChange={this.handleInput('age')}\n      />\n\n      <h4>Education</h4>\n      <RadioGroup\n        name=\"education\"\n        options={educations}\n        value={this.state.education}\n        onChange={this.handleInput('education')}\n      />\n\n      <h4>Ethnicity</h4>\n      <CheckboxGroup\n        name=\"ethnicity\"\n        options={ethnicities}\n        addOther={true}\n        value={this.state.ethnicity}\n        onChange={this.handleCheck('ethnicity')}\n      />\n\n      <h4>Feedback</h4>\n      <textarea\n        name=\"feedback\"\n        rows={2}\n        placeholder=\"If you have any feedback, comments, or suggestions, please describe them here.\"\n        onChange={(e) => this.handleInput('feedback')(e.target.value)}\n        value={this.state.feedback}\n      />\n\n      <button type=\"submit\">\n        Submit\n      </button>\n\n    </form>\n  )\n\n}","import React, { Component } from 'react';\n\nexport default function Done() {\n  return (\n    <div>\n      <h2>Thank You</h2>\n      <p>The task is now over.</p>\n    </div>\n  )\n}","import React, { Component } from 'react';\nimport styles from './App.module.scss';\nimport Instructions from './Instructions/Instructions';\nimport Task, { TaskData } from './Task/Task';\nimport DemographicSurvey, { SurveyData } from './DemographicSurvey/DemographicSurvey';\nimport Done from './Done/Done';\nimport { isString } from 'lodash';\n\n/**\n * Sends a POST request to a URL via an HTML form\n * This is the *only* way to send data to AMT\n */\nfunction formPOST(url: string, data: { [name: string]: any }) {\n  const form = document.createElement('form');\n  form.action = url;\n  form.method = 'POST';\n  form.setAttribute('style', 'display:none!important');\n  Object.entries(data).forEach(([name, value]) => {\n    const input = document.createElement('input');\n    input.name = name;\n    input.value = isString(value) ? value : JSON.stringify(value);\n    input.type = 'hidden';\n    form.append(input);\n  });\n  const body = document.getElementsByTagName('body').item(0) as HTMLElement;\n  body.appendChild(form);\n  form.submit();\n  body.removeChild(form);\n}\n\nconst title = 'Experiment Title';\ndocument.title = title;\n\nenum pages {\n  instructions,\n  task,\n  survey,\n  done,\n};\n\ninterface State {\n  page: pages;\n  taskData?: TaskData;\n  surveyData?: SurveyData;\n}\n\nexport default class App extends Component<{}, State> {\n  readonly state: Readonly<State> = {\n    page: pages.instructions\n  };\n\n  submit = () => {\n    const urlParams = new URLSearchParams(window.location.search);\n    // should get prod/sandbox domain, falling back to prod\n    let submitDomain = urlParams.get('turkSubmitTo') || 'https://www.mturk.com/';\n    if (!submitDomain.endsWith('/')) {\n      submitDomain += '/';\n    }\n    const submitURL = `${submitDomain}mturk/externalSubmit`;\n    formPOST(submitURL, {\n      assignmentId: urlParams.get('assignmentId') || '?',\n      taskData: this.state.taskData,\n      surveyData: this.state.surveyData,\n    });\n    this.setState({ page: pages.done });\n  }\n\n  render() {\n    let mainContent: JSX.Element;\n    if (this.state.page === pages.instructions) {\n      mainContent = <Instructions\n        onContinue={() => this.setState({ page: pages.task })}\n      />;\n    } else if (this.state.page === pages.task) {\n      mainContent = <Task\n        onDone={(taskData) => this.setState({\n          page: pages.survey,\n          taskData,\n        })}\n      />;\n    } else if (this.state.page === pages.survey) {\n      mainContent = <DemographicSurvey\n        onSubmit={(surveyData) => {\n          this.setState({ surveyData }, this.submit);\n        }}\n      />\n    } else {\n      mainContent = <Done />;\n    }\n\n    return (\n      <div className={styles.app}>\n        <header>\n          <h1>{ title }</h1>\n        </header>\n\n        <main>\n          { mainContent }\n        </main>\n        <footer>\n          <p>This is a disclaimer. You are participating voluntarily.</p>\n        </footer>\n      </div>\n    );\n  }\n}\n","import 'react-app-polyfill/ie9';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__W2tGk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"instructions\":\"Instructions_instructions__2yno8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"survey\":\"DemographicSurvey_survey__3Grmp\"};"],"sourceRoot":""}