{"version":3,"sources":["Instructions/Instructions.tsx","Task/Task.tsx","DemographicSurvey/FormComponents.tsx","DemographicSurvey/DemographicSurvey.tsx","Done/Done.tsx","App.tsx","index.tsx","App.module.scss","Instructions/Instructions.module.scss","DemographicSurvey/DemographicSurvey.module.scss"],"names":["Instructions","_ref","onContinue","react_default","a","createElement","className","styles","instructions","onClick","src","Task","handleDone","_this","props","onDone","timestamp","Date","render","task","Component","Group","inputType","onChange","event","target","value","entries","Object","options","addOther","push","undefined","map","_ref2","slicedToArray","display","key","type","name","defaultChecked","isChecked","_","RadioGroup","_Group","_getPrototypeOf3","_this2","classCallCheck","this","_len2","arguments","length","args","Array","_key2","possibleConstructorReturn","getPrototypeOf","call","apply","concat","inherits","CheckboxGroup","_Group2","_getPrototypeOf4","_this3","_len4","_key4","indexOf","ages","ageGroup18","ageGroup25","ageGroup35","ageGroup45","ageGroup55","ageGroup65","educations","lessThanHighSchool","highSchool","someCollege","twoYearDegree","fourYearDegree","mastersDegree","doctoralDegree","professionalDegree","ethnicities","Asian","Latino_Hispanic","Pacific_Islander","Black_African","Middle_Eastern","White_Caucasian","East_Indian","Native_American","initialState","gender","age","education","ethnicity","feedback","DemographicSurvey","state","handleInput","setState","defineProperty","handleCheck","prevState","prevCheckedValues","valueIdx","splice","handleSubmit","preventDefault","onSubmit","alert","survey","FormComponents_RadioGroup","male","female","FormComponents_CheckboxGroup","rows","placeholder","e","Done","pages","title","document","App","page","submit","form","FormData","urlParams","URLSearchParams","window","location","search","set","get","JSON","stringify","taskData","surveyData","submitDomain","submitURL","axios","post","headers","Content-Type","mainContent","src_Instructions_Instructions","Task_Task","DemographicSurvey_DemographicSurvey","done","app","ReactDOM","App_App","getElementById","module","exports"],"mappings":"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","file":"static/js/main.87b96343.chunk.js","sourcesContent":["import React, { FunctionComponent } from 'react';\nimport styles from './Instructions.module.scss';\n\ninterface Props {\n  onContinue?: () => void;\n}\n\nconst Instructions: FunctionComponent<Props> = ({ onContinue }) => (\n  <div className={styles.instructions}>\n    <h2>Instructions</h2>\n    <p className='bold'>A one-line description of the task.</p>\n    <p>A paragraph explaining a bit more about the task.</p>\n    <h3>Guidelines</h3>\n    <ol>\n      <li>Read the instructions.</li>\n      <li>Do the task.</li>\n      <li>Profit!</li>\n    </ol>\n    <button onClick={onContinue}>Continue</button>\n    <h3>Examples</h3>\n    <img src='https://i.gifer.com/UGQn.gif'></img>\n  </div>\n);\n\nexport default Instructions;\n","import React, { Component } from 'react';\nimport styles from './Task.module.scss';\n\ninterface Props {\n  onDone?: (data: TaskData) => void;\n}\n\nexport interface TaskData {\n  timestamp: Date;\n}\n\nexport default class Task extends Component<Props> {\n\n  handleDone = () => {\n    if (this.props.onDone) {\n      this.props.onDone({ timestamp: new Date() });\n    }\n  }\n\n  render = () => (\n    <div className={styles.task}>\n      <button onClick={this.handleDone}>Click the button to win!</button>\n    </div>\n  )\n\n}","import React, { Component } from 'react';\nimport * as _ from 'lodash';\n\n\n// Shared\n\n// name is the name of the radio / checkbox group; should be unique for page\n// options map to display names, just uppercases each word of value if not given\n// onchange passes the value of the input interacted with\ninterface GroupProps {\n  name: string;\n  options: { [value: string]: string | undefined };\n  onChange: (updatedValue: string) => void;\n  addOther?: boolean;\n}\n\n// This component is stateless\n// T is extra props, should be \"extends but doesn't override\"\nabstract class Group<T extends GroupProps> extends Component<T> {\n  abstract inputType: string;\n\n  abstract isChecked(value: string): boolean;\n\n  onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.props.onChange(event.target.value);\n  }\n\n  render = () => {\n    const entries = Object.entries(this.props.options);\n    if (this.props.addOther) {\n      entries.push(['other', undefined]);\n    }\n    entries.push(['unspecified', 'Prefer Not To Say']);\n    return (\n      <div onChange={this.onChange}>\n      {entries.map(([value, display]) => (\n        <label key={value}>\n          <input\n            type={this.inputType}\n            name={name}\n            value={value}\n            defaultChecked={this.isChecked(value)}\n          />\n          <span>{_.isString(display) ? display : _.startCase(value)}</span>\n        </label>\n      ))}\n      </div>\n    )\n  }\n}\n\n\n// Radio Group\ninterface RadioGroupProps extends GroupProps {\n  value: string; // the currently checked radio button\n}\n\nexport class RadioGroup extends Group<RadioGroupProps> {\n  inputType = 'radio';\n\n  isChecked = (value: string) => this.props.value === value;\n}\n\n\n// Checkbox Group\ninterface CheckboxGroupProps extends GroupProps {\n  value: string[]; // all checked values\n}\n\nexport class CheckboxGroup extends Group<CheckboxGroupProps> {\n  inputType = 'checkbox';\n\n  isChecked = (value: string) => this.props.value.indexOf(value) >= 0;\n}\n","\nimport React, { Component } from 'react';\nimport { RadioGroup, CheckboxGroup } from './FormComponents';\n\nimport styles from './DemographicSurvey.module.scss';\n\nconst ages = {\n  ageGroup18: '18 to 24',\n  ageGroup25: '25 to 34',\n  ageGroup35: '35 to 44',\n  ageGroup45: '45 to 54',\n  ageGroup55: '55 to 64',\n  ageGroup65: '65 and over',\n}\n\nconst educations = {\n  lessThanHighSchool: undefined,\n  highSchool: 'High School / GED',\n  someCollege: undefined,\n  twoYearDegree: undefined,\n  fourYearDegree: undefined,\n  mastersDegree: \"Master's Degree\",\n  doctoralDegree: undefined,\n  professionalDegree: undefined\n}\n\nconst ethnicities = {\n  Asian: undefined,\n  Latino_Hispanic: 'Latino / Hispanic',\n  Pacific_Islander: undefined,\n  Black_African: 'Black / African Descent',\n  Middle_Eastern: undefined,\n  White_Caucasian: 'White / Caucasian',\n  East_Indian: undefined,\n  Native_American: undefined\n};\n\nconst initialState = {\n  gender: '',\n  age: '',\n  education: '',\n  ethnicity: [] as string[],\n  feedback: '',\n};\ntype State = Readonly<typeof initialState>;\n\nexport type SurveyData = State;\n\ninterface Props {\n  onSubmit?: (formData: State) => void;\n}\n\nexport default class DemographicSurvey extends Component<Props, State> {\n  readonly state: State = initialState;\n\n  handleInput = <K extends keyof State>(name: K) => (value: string) => {\n    this.setState({\n      [name]: value,\n    } as any);\n  }\n\n  handleCheck = <K extends keyof State>(name: K) => (value: string) => {\n    this.setState((prevState) => {\n      const prevCheckedValues = prevState[name] as string[];\n      const valueIdx = prevCheckedValues.indexOf(value);\n      if (valueIdx >= 0) {\n        prevCheckedValues.splice(valueIdx, 1);\n      } else {\n        prevCheckedValues.push(value);\n      }\n      return { [name]: prevCheckedValues } as any;\n    });\n  }\n\n  handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (\n      !this.state.gender\n      || !this.state.age\n      || !this.state.education\n      || this.state.ethnicity.length == 0\n    ) {\n      alert('Please complete the survey.');\n    } else if (this.props.onSubmit) {\n      this.props.onSubmit(this.state);\n    }\n  }\n\n  render = () => (\n    <form className={styles.survey} onSubmit={this.handleSubmit}>\n      <h2>Demographic Survey</h2>\n      <p>Before you submit the task, please take a moment to fill out this survey.</p>\n\n      <h4>Gender</h4>\n      <RadioGroup\n        name=\"gender\"\n        options={{ male: undefined, female: undefined }}\n        addOther={true}\n        value={this.state.gender}\n        onChange={this.handleInput('gender')}\n      />\n\n      <h4>Age</h4>\n      <RadioGroup\n        name=\"age\"\n        options={ages}\n        value={this.state.age}\n        onChange={this.handleInput('age')}\n      />\n\n      <h4>Education</h4>\n      <RadioGroup\n        name=\"education\"\n        options={educations}\n        value={this.state.education}\n        onChange={this.handleInput('education')}\n      />\n\n      <h4>Ethnicity</h4>\n      <CheckboxGroup\n        name=\"ethnicity\"\n        options={ethnicities}\n        addOther={true}\n        value={this.state.ethnicity}\n        onChange={this.handleCheck('ethnicity')}\n      />\n\n      <h4>Feedback</h4>\n      <textarea\n        name=\"feedback\"\n        rows={2}\n        placeholder=\"If you have any feedback, comments, or suggestions, please describe them here.\"\n        onChange={(e) => this.handleInput('feedback')(e.target.value)}\n        value={this.state.feedback}\n      />\n\n      <button type=\"submit\">\n        Submit\n      </button>\n\n    </form>\n  )\n\n}","import React, { Component } from 'react';\n\nexport default function Done() {\n  return (\n    <div>\n      <h2>Thank You</h2>\n      <p>The task is now over.</p>\n    </div>\n  )\n}","import React, { Component } from 'react';\nimport axios from 'axios';\nimport styles from './App.module.scss';\nimport Instructions from './Instructions/Instructions';\nimport Task, { TaskData } from './Task/Task';\nimport DemographicSurvey, { SurveyData } from './DemographicSurvey/DemographicSurvey';\nimport Done from './Done/Done';\n\nconst title = 'Experiment Title';\ndocument.title = title;\n\nenum pages {\n  instructions,\n  task,\n  survey,\n  done,\n};\n\ninterface State {\n  page: pages;\n  taskData?: TaskData;\n  surveyData?: SurveyData;\n}\n\nexport default class App extends Component<{}, State> {\n  readonly state: Readonly<State> = {\n    page: pages.instructions\n  };\n\n  submit = () => {\n    const form = new FormData(); // AMT expects Form Data\n    const urlParams = new URLSearchParams(window.location.search);\n\n    // AMT expects this field\n    form.set('assignmentId', urlParams.get('assignmentId') || '?');\n    // AMT ignores these fields so you can remove them if you are sending to AMT\n    form.set('workerId', urlParams.get('workerId') || '?');\n    form.set('hitId', urlParams.get('workerId') || '?');\n\n    form.set('taskData', JSON.stringify(this.state.taskData));\n    form.set('surveyData', JSON.stringify(this.state.surveyData));\n\n    // should get prod/sandbox domain, falling back to prod\n    const submitDomain = urlParams.get('turkSubmitTo') || 'https://www.mturk.com/';\n    const submitURL = `${submitDomain}mturk/externalSubmit`;\n    const options = { headers: {'Content-Type': 'multipart/form-data' }};\n    axios.post(submitURL, form, options);\n  }\n\n  render() {\n    const urlParams = new URLSearchParams(window.location.search);\n    const submitDomain = urlParams.get('turkSubmitTo') || 'https://www.mturk.com/';\n    const submitURL = `${submitDomain}mturk/externalSubmit`;\n\n    let mainContent: JSX.Element;\n    if (this.state.page === pages.instructions) {\n      mainContent = <Instructions\n        onContinue={() => this.setState({ page: pages.task })}\n      />;\n    } else if (this.state.page === pages.task) {\n      mainContent = <Task\n        onDone={(taskData) => this.setState({\n          page: pages.survey,\n          taskData,\n        })}\n      />;\n    } else if (this.state.page === pages.survey) {\n      mainContent = <DemographicSurvey\n        onSubmit={(surveyData) => {\n          this.setState({\n            page: pages.done,\n            surveyData\n          }, this.submit);\n        }}\n      />\n    } else {\n      mainContent = <Done />;\n    }\n\n    return (\n      <div className={styles.app}>\n        <header>\n          <h1>{ title }</h1>\n        </header>\n\n        <main>\n          { mainContent }\n        </main>\n        <footer>\n          <p>This is a disclaimer. You are participating voluntarily. {submitURL}</p>\n        </footer>\n      </div>\n    );\n  }\n}\n","import 'react-app-polyfill/ie9';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__W2tGk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"instructions\":\"Instructions_instructions__2yno8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"survey\":\"DemographicSurvey_survey__3Grmp\"};"],"sourceRoot":""}